@custom-media --viewport-xs (min-width: 40em);
@custom-media --viewport-s (min-width: 52em);
@custom-media --viewport-m (min-width: 64em);
@custom-media --viewport-l (min-width: 72em);

/* Regular weight font */
@font-face {
  font-family: "Eesti";
  src: url("/assets/fonts/GT-Eesti-Text-Light-subset.woff2") format("woff2"),
    url("/assets/fonts/GT-Eesti-Text-Light-subset.zopfli.woff") format("woff"),
    url("/assets/fonts/GT-Eesti-Text-Light-subset.ttf") format("truetype");

  font-weight: 400;
  font-display: swap;
}

/* Bold weight font */
@font-face {
  font-family: "Eesti";
  src: url("/assets/fonts/GT-Eesti-Text-Medium-subset.woff2") format("woff2"),
    url("/assets/fonts/GT-Eesti-Text-Medium-subset.zopfli.woff") format("woff"),
    url("/assets/fonts/GT-Eesti-Text-Medium-subset.ttf") format("truetype");
  font-weight: 600;
  font-display: swap;
}

/* Italic style regular weight font */
@font-face {
  font-family: "Eesti";
  src: url("/assets/fonts/GT-Eesti-Text-Light-Italic-subset.woff2")
      format("woff2"),
    url("/assets/fonts/GT-Eesti-Text-Light-Italic-subset.zopfli.woff")
      format("woff"),
    url("/assets/fonts/GT-Eesti-Text-Light-Italic-subset.ttf")
      format("truetype");
  font-weight: 400;
  font-style: italic;
  font-display: swap;
}

:root {
  --space0: 0rem;
  --space1: 0.25rem;
  --space2: 0.5rem;
  --space3: 1rem;
  --space4: 2rem;
  --space5: 4rem;
  --space6: 6rem;
  --space7: 8rem;
  --space8: 10rem;

  --font0: 0.75rem;
  --font1: 0.875rem;
  --font2: 1rem;
  --font3: 1.25rem;
  --font4: 1.5rem;
  --font5: 2rem;
  --font6: 3rem;
  --font7: 4rem;
  --font8: 6rem;
  --font9: 8rem;
  --font10: 10rem;
  --font11: 11rem;

  --black: #121212;
  --darkGray: #333;
  --gray: #878787;
  --lightGray: hsl(0, 0%, 94%);
  --white: #fff;
  --nearWhite: hsl(0, 0%, 96%);
  --green: #00be00;
  --yellow: #ffe500;
  --blue: #0805ec;
  --red: #ff2800;

  --text: var(--black);
  --textLight: var(--white);
  --background: var(--white);
  --backgroundDark: var(--black);
  --backgroundMuted: var(--nearWhite);
  --primary: var(--yellow);
  --secondary: var(--blue);
  --tertiary: var(--green);
  --quarternary: var(--red);
  --muted: var(--lightGray);
  --border: var(--gray);

  --sans: "Eesti", system-ui, -apple-system, BlinkMacSystemFont, Helvetica,
    Arial, sans-serif;
}

* {
  box-sizing: border-box;
}

html {
  scroll-behavior: smooth;
  scroll-padding-top: var(--space5);
  font-size-adjust: 0.46;
}

body {
  display: grid;
  /* header -> main (stretches to fill page height) -> footer */
  grid-template-rows: auto 1fr auto;
  /* stop main content overflowing grid:
  https://css-tricks.com/preventing-a-grid-blowout/ */
  grid-template-columns: minmax(0, 1fr);

  font-size: var(--font2);
  font-family: var(--sans);
  line-height: 1.5;
  color: var(--black);

  @media (--viewport-xs) {
    font-size: var(--font3);
  }
}

html,
body {
  height: 100%;
}

@media (prefers-reduced-motion: reduce) {
  * {
    animation-delay: 0s !important;
    animation-duration: 0s !important;
  }
  html {
    scroll-behavior: auto !important;
  }
}

body,
p,
figure,
blockquote {
  margin: 0;
}

ul,
ol {
  padding-left: 1.5rem;
}

ul[class],
ol[class] {
  padding: 0;
  list-style: none;
}

img,
video {
  max-width: 100%;
  height: auto;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  margin-top: 1.5em;
  line-height: 1;
  font-weight: 600;
}

a {
  color: var(--secondary);
}

.site-header {
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-wrap: wrap;
  padding: var(--space3);

  @media (--viewport-xs) {
    padding: var(--space4);
  }
}

.site-logo {
  @media (--viewport-s) {
    width: 160px;
  }
  @media (--viewport-m) {
    width: 180px;
  }
}

.site-header ul {
  list-style: none;
  padding: 0;
  display: grid;
  grid-template-columns: repeat(var(--cols, 5), 1fr);
  gap: var(--space3);
  counter-reset: nav;

  @media (--viewport-xs) {
    gap: var(--space4);
  }

  @media (--viewport-l) {
    gap: var(--space5);
  }
}

.site-header ul a {
  position: relative;
  display: grid;
  gap: var(--space1);
  width: 100%;
  border-top: 2px solid var(--border);
  padding-top: var(--space2);
  font-size: var(--font1);
  text-decoration: none;
  color: inherit;
  counter-increment: nav;
}

.site-header ul a::before {
  content: "";
  position: absolute;
  top: -2px;
  width: 100%;
  height: 2px;
  background-color: var(--secondary);
  transform-origin: left center;
  transform: scaleX(0);
  transition: transform 0.2s;
}

.site-header ul a:hover::before,
.site-header ul a[aria-current="page"]::before {
  transform: scaleX(1);
}

.site-header ul a::after {
  content: counter(nav, decimal-leading-zero);
}

main {
  width: 100%;
  max-width: 66rem;
  justify-self: center;
  padding: var(--space3);
  --spacing: var(--space4);

  & > * + * {
    /* All children with a preceding sibling get margin-top */
    margin-top: var(--spacing);
  }

  &.document {
    /* Document pages (e.g privacy policy) are narrower */
    max-width: 50rem;
  }

  @media (--viewport-xs) {
    padding: var(--space4);

    /* Marketing pages get more space on larger screens */
    &.marketing {
      --spacing: var(--space5);
    }
  }

  @media (--viewport-m) {
    padding: var(--space5) var(--space4);

    /* Marketing pages get more space on larger screens */
    &.marketing {
      --spacing: var(--space7);
    }
  }
}

h1 {
  font-size: var(--font7);
  display: inline;
  background-image: linear-gradient(
    transparent,
    transparent 70%,
    var(--primary) 70%,
    var(--primary) 85%,
    transparent 85%
  );

  @media (--viewport-xs) {
    font-size: var(--font8);
  }
}

h2 {
  font-size: var(--font4);

  @media (--viewport-xs) {
    font-size: var(--font5);
  }
}

h3 {
  font-size: var(--font3);

  @media (--viewport-xs) {
    font-size: var(--font4);
  }
}

h4 {
  font-size: var(--font2);

  @media (--viewport-xs) {
    font-size: var(--font3);
  }
}

h5 {
  font-size: var(--font2);
}

h6 {
  font-size: var(--font1);
}

.giant-title {
  font-size: var(--font7);

  @media (--viewport-xs) {
    font-size: var(--font8);
  }

  @media (--viewport-s) {
    font-size: var(--font9);
  }

  @media (--viewport-m) {
    font-size: var(--font11);
  }
}

.divider {
  width: 0;
  height: 100px;
  border: 0;
  border-left: var(--primary) double 16px;
  transform: scaleY(0);
  transform-origin: center top;
  animation-name: scale-in;
  animation-duration: 0.5s;
  animation-delay: 0.75s;
  animation-timing-function: ease-out;
  animation-fill-mode: forwards;
}

@keyframes scale-in {
  to {
    transform: scaleY(1);
  }
}

.heading-anchor {
  color: inherit;
}

.intro {
  font-size: var(--font4);

  @media (--viewport-xs) {
    font-size: var(--font5);
  }
}

.vh {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

[class^="stack"] > * {
  margin-top: 0;
  margin-bottom: 0;
}

.stack > * + * {
  margin-top: var(--space3);
}

.stack2 > * + * {
  margin-top: var(--space2);
}

.stack4 > * + * {
  margin-top: var(--space4);
}

.stack5 > * + * {
  margin-top: var(--space5);
}

.stack6 > * + * {
  margin-top: var(--space6);
}

.stack7 > * + * {
  margin-top: var(--space7);
}

.cluster {
  --gap: var(--space3);
  overflow: hidden;
}

.cluster > * {
  margin: calc(var(--gap) / 2 * -1);
  display: flex;
  flex-wrap: wrap;
}

.cluster > * > * {
  margin: calc(var(--gap) / 2);
}

.grid {
  --min-width: 16rem;
  --gap: var(--space5);
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(var(--min-width), 1fr));
  grid-gap: var(--gap);
}

.box {
  --pad: var(--space4);
  --bg: var(--background);
  padding: var(--pad);
  background-color: var(--bg);
}

.full-width {
  margin-left: calc(-50vw + 50%);
  margin-right: calc(-50vw + 50%);

  &.xs {
    @media (--viewport-xs) {
      margin-left: initial;
      margin-right: initial;
    }
  }
}

.stripes {
  --py: var(--space3);
  --px: var(--space3);
  --stripe: var(--muted);
  padding: var(--py) var(--px);
  background-image: repeating-linear-gradient(
    -45deg,
    var(--stripe),
    var(--stripe) 2px,
    transparent 2px,
    transparent 8px
  );

  @media (--viewport-xs) {
    --py: var(--space4);
    --px: var(--space4);
  }
}

/* If stripey bg is last thing in main this removes gap above footer (matches padding-bottom of <main>) */
main > .stripes:last-child {
  margin-bottom: calc(var(--space3) * -1);

  @media (--viewport-xs) {
    margin-bottom: calc(var(--space4) * -1);
  }

  @media (--viewport-m) {
    margin-bottom: calc(var(--space5) * -1);
  }
}

.reel {
  --gap: var(--space3);
  --col-xs: 80%; /* sets the default width of children */
  --col: 24rem;
  display: flex;
  overflow-x: auto;
  scroll-snap-type: x mandatory;

  @media (--viewport-xs) {
    --gap: var(--space4);
  }
}

.reel > * {
  scroll-snap-align: center;
  flex: 1 0 var(--col-xs);

  @media (--viewport-xs) {
    flex: 1 0 var(--col);
  }
}

.reel > * + * {
  margin-left: var(--gap);
}

/* for stuff that should stack on mobile */
.reel-xs {
  /* Cancel flex layout for smallest viewport */
  display: initial;
  @media (--viewport-xs) {
    /* back to flex row layout */
    display: flex;
  }
  & > * + * {
    /* Need to reset all the child margins */
    margin-left: 0;
    @media (--viewport-xs) {
      margin-left: var(--gap);
    }
  }
}
.top-stripe::before {
  content: "";
  display: block;
  width: 7rem;
  height: 0.5rem;
  margin-bottom: var(--space4);
  background-color: var(--cycle-colour);
}

.steps li {
  position: relative;
  counter-increment: steps;
}

.steps li::before {
  content: counter(steps, decimal-leading-zero);
  font-weight: 600;
  font-size: var(--font7);
  background-image: repeating-linear-gradient(
    transparent,
    transparent 50%,
    var(--cycle-colour) 50%,
    var(--cycle-colour)
  );

  @media (--viewport-xs) {
    font-size: var(--font8);
  }
}

.cycle-colors > *:nth-child(4n + 1) {
  --cycle-colour: var(--primary);
}

.cycle-colors > *:nth-child(4n + 2) {
  --cycle-colour: var(--secondary);
}

.cycle-colors > *:nth-child(4n + 3) {
  --cycle-colour: var(--tertiary);
}

.cycle-colors > *:nth-child(4n + 4) {
  --cycle-colour: var(--quarternary);
}

.circle-reveal {
  clip-path: circle(0% at 50% 0);
  animation: circle 0.7s 1.75s ease-in forwards;
}

@keyframes circle {
  to {
    clip-path: circle(100% at 50% 0);
  }
}

.testimonial {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  grid-template-rows: 2rem repeat(7, 1fr);
  align-items: start;

  &.staff {
    grid-template-rows: 2rem repeat(5, 1fr); /* No blockquote so we don't need the extra rows  */
  }
}

.testimonial figcaption {
  max-width: max-content;
  display: grid;
  justify-items: right;
  grid-row: 1 / 3;
  grid-column: 1 / -1;
  z-index: 10;
}

.testimonial figcaption > * {
  padding: var(--space2);
  background-color: var(--background);
}

.testimonial figcaption > *:last-child {
  padding-top: 0;
}

.testimonial figcaption > h3 {
  margin: 0;
  font-size: var(--font5);
  text-transform: uppercase;

  @media (--viewport-xs) {
    font-size: var(--font6);
  }
}

.testimonial .image {
  position: relative;
  grid-row: 2 / 7;
  grid-column: 2 / 12;
  align-self: stretch;
  border: var(--space2) solid var(--primary);

  &::after {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-color: var(--secondary);
    mix-blend-mode: screen;
    transition: opacity 0.2s;
  }
  &:hover::after {
    opacity: 0;
  }
}

.testimonial img {
  display: block;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.testimonial blockquote {
  grid-row: 6 / -1;
  grid-column: 3 / -1;
  padding: var(--space3);
  font-style: italic;
  line-height: 1.3;
  background-color: var(--background);
  quotes: "“" "”" "‘" "’";
  z-index: 10;

  @media (--viewport-xs) {
    grid-row: 6 / -1;
    grid-column: 4 / -1;
  }
}

.testimonial blockquote::before {
  content: open-quote;
}

.testimonial blockquote::after {
  content: close-quote;
}

.testimonial.partner {
  grid-template-columns: var(--space4) 1fr;
  grid-template-rows: auto 1fr;
  grid-row-gap: var(--space3);

  & figcaption {
    grid-row: 1 / 2;
    grid-column: 1 / -1;
    & > * {
      background-color: var(--primary);
    }
  }

  & blockquote {
    grid-row: 2 / -1;
    grid-column: 2 / -1;
    font-size: var(--font3);

    @media (--viewport-xs) {
      font-size: var(--font4);
    }
  }

  @media (--viewport-xs) {
    grid-template-columns: var(--space5) 1fr;
  }
}

.sticky {
  --bg: var(--primary);
  position: sticky;
  bottom: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: var(--space2) var(--space3);
  font-weight: bold;
  line-height: 1;
  background-color: var(--bg);
  z-index: 20;

  @media (--viewport-xs) {
    padding: var(--space3);
  }

  & > a {
    flex: 0 0 auto;
    margin-left: var(--space3);
    padding: var(--space1) var(--space2);
    text-decoration: none;
    text-align: center;
    background-color: var(--background);
    color: inherit;

    @media (--viewport-xs) {
      margin-left: var(--space4);
      padding: var(--space2) var(--space3);
    }
  }
}

.card {
  position: relative;
  display: grid;
  grid-template-rows: 170px 1fr;

  @media (--viewport-xs) {
    grid-template-rows: 225px 1fr;
  }

  & .image {
    background-color: var(--backgroundMuted);
  }

  & img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  & h3 {
    font-size: var(--font5);
  }
  & a {
    text-decoration: none;
    color: inherit;
    &:hover {
      text-decoration: underline;
    }
    &::before {
      content: "";
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
    }
  }
  & .body {
    display: grid;
    grid-template-rows: auto 1fr auto;
    grid-row-gap: var(--space2);
    padding: var(--space3);
    background-color: var(--background);

    @media (--viewport-m) {
      padding: var(--space4);
    }
  }
  & footer {
    font-size: var(--font2);
  }
  & .dot {
    margin: 0 var(--space2);
    color: var(--border);
  }
}

.site-footer {
  background-color: var(--text);
  color: var(--background);

  & > * {
    display: grid;
    grid-template-rows: 1fr auto;
    max-width: 60rem;
    margin: 0 auto;
    padding: var(--space4);
  }

  &.full-height > * {
    min-height: 100vh;
  }

  & a {
    color: inherit;
  }
}

.next-page {
  display: grid;
  align-content: center;
}

.next-page h2 {
  margin-bottom: var(--space4);
  font-size: var(--font4);
}

.next-page a {
  font-size: var(--font7);
  font-weight: 600;
  text-decoration: none;
  line-height: 1;
  color: inherit;

  &:hover {
    text-decoration: underline;
    text-decoration-color: var(--primary);
  }

  @media (--viewport-xs) {
    font-size: var(--font8);
  }
}

.site-info {
  font-size: var(--font2);

  &::before {
    content: "";
    display: block;
    width: var(--space6);
    height: 2px;
    border-top: var(--space2) double var(--primary);
    margin-bottom: var(--space3);
  }
  @media (--viewport-m) {
    text-align: center;

    &::before {
      margin-left: auto;
      margin-right: auto;
    }
  }
}

address {
  font-style: normal;
}

.checkbox ~ label {
  width: max-content;
  display: flex;
  align-items: center;
  justify-content: center;
}

.checkbox ~ label::before {
  content: "";
  display: block;
  width: 1.5rem;
  height: 1.5rem;
  margin-right: 0.75rem;
  border: 1px solid var(--backgroundDark);
  border-radius: 2px;
  background-position: center center;
  background-repeat: no-repeat;
}

.checkbox:checked ~ label::before {
  background-color: var(--backgroundDark);
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="hsl(220, 10%, 90%)" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"><polyline points="20 6 9 17 4 12"></polyline></svg>');
}

.checkbox:focus ~ label::before {
  box-shadow: 0 0 0 3px var(--border);
}

.slack-form {
  display: grid;
  justify-content: center;

  & button {
    margin: 1.5rem auto 0;
    display: flex;
    align-items: center;
    width: max-content;
    font-size: inherit;
    font-family: inherit;
    border: 0;
    padding: 0.75rem 1.5rem;
    background-color: var(--backgroundDark);
    color: #e3e5e8;
    font-weight: bold;
    text-transform: uppercase;
    text-decoration: none;
    letter-spacing: 1px;
    border-radius: 4px;
    cursor: pointer;
  }

  & button:focus {
    outline: 0;
    box-shadow: 0 0 0 3px var(--border);
  }

  & button::-moz-focus-inner {
    border: 0;
  }

  & button > svg {
    margin-left: 0.5rem;
  }

  /* visually "disable" button until form is valid  */
  &:invalid button {
    opacity: 0.5;
    cursor: not-allowed;
  }
}

.dialog {
  display: grid;
  grid-template-columns: 2rem 1fr;
  grid-column-gap: var(--space3);
  padding: var(--space4);
  --bg: var(--muted);
  background-color: var(--bg);

  & * {
    margin: 0;
  }
}
